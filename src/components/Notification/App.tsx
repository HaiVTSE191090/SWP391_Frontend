import { useState } from 'react'
import { Container, Row, Col, Button, Card, Alert } from 'react-bootstrap'
import NotificationPopup from './components/NotificationPopup'
import ReviewConfirmPage from './components/ReviewConfirmPage'
// @ts-ignore
import { kiemTraCCCD } from './cccdCheck.js'

function App() {
  const [popupType, setPopupType] = useState<string | null>(null);
  const [thongTinCCCD, setThongTinCCCD] = useState<any>(null);
  const [currentPage, setCurrentPage] = useState<'test' | 'review'>('test');

  // D·ªØ li·ªáu test cho popup
  const duLieuTest = [
    // CCCD h·ª£p l·ªá - ch∆∞a ƒëƒÉng k√Ω, ƒë·ªß tu·ªïi
    {
      ten: "NGUY·ªÑN VƒÇN D",
      cccd: "123123123123",
      ngaySinh: "20/05/1995",
      diaChi: "123 ƒê∆∞·ªùng ABC, H√† N·ªôi"
    },
    // CCCD ƒë√£ ƒëƒÉng k√Ω - s·∫Ω b·ªã tr√πng
    {
      ten: "NGUY·ªÑN VƒÇN A", 
      cccd: "001234567890",
      ngaySinh: "15/08/1990",
      diaChi: "456 ƒê∆∞·ªùng XYZ, H√† N·ªôi"
    },
    // CCCD ch∆∞a ƒë·ªß tu·ªïi
    {
      ten: "NGUY·ªÑN VƒÇN E",
      cccd: "999999999999", 
      ngaySinh: "10/10/2010",
      diaChi: "789 ƒê∆∞·ªùng DEF, H√† N·ªôi"
    }
  ];

  // D·ªØ li·ªáu m·∫´u cho trang Review (th√¥ng tin ƒë·∫ßy ƒë·ªß)
  const layThongTinDayDu = () => {
    if (thongTinCCCD) {
      // S·ª≠ d·ª•ng th√¥ng tin t·ª´ CCCD ƒë√£ test + th√™m th√¥ng tin m·∫´u
      return {
        ten: thongTinCCCD.ten,
        email: "example@gmail.com", // M·∫´u
        sdt: "0987654321", // M·∫´u  
        cccd: thongTinCCCD.cccd,
        gplx: "B2-123456789", // M·∫´u
        ngaySinh: thongTinCCCD.ngaySinh,
        diaChi: thongTinCCCD.diaChi,
        gioiTinh: "Nam" // M·∫´u
      };
    }
    
    // Fallback data
    return {
      ten: "NGUY·ªÑN VƒÇN MINH",
      email: "nguyenvanminh@gmail.com",
      sdt: "0987654321",
      cccd: "123456789012",
      gplx: "B2-987654321",
      ngaySinh: "15/03/1995",
      diaChi: "123 ƒê∆∞·ªùng L√™ L·ª£i, Qu·∫≠n 1, TP.HCM",
      gioiTinh: "Nam"
    };
  };

  // X·ª≠ l√Ω khi nh·∫•n n√∫t test
  const testCCCD = (duLieu: any) => {
    console.log('ƒêang ki·ªÉm tra:', duLieu);
    setThongTinCCCD(duLieu);
    
    // Ki·ªÉm tra v√† l·∫•y k·∫øt qu·∫£
    const ketQua = kiemTraCCCD(duLieu);
    console.log('K·∫øt qu·∫£:', ketQua);
    
    // Hi·ªán popup t∆∞∆°ng ·ª©ng
    setPopupType(ketQua);
  };

  // ƒê√≥ng popup
  const dongPopup = () => {
    setPopupType(null);
    setThongTinCCCD(null);
  };

  // X·ª≠ l√Ω ƒë·ªìng √Ω - chuy·ªÉn qua trang Review
  const xuLyDongY = () => {
    dongPopup(); // ƒê√≥ng popup tr∆∞·ªõc
    setCurrentPage('review'); // Chuy·ªÉn qua trang Review
  };

  // X·ª≠ l√Ω kh√¥ng ƒë·ªìng √Ω
  const xuLyKhongDongY = () => {
    alert('Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin!');
    dongPopup();
  };

  // X·ª≠ l√Ω chuy·ªÉn trang
  const quayLaiTest = () => {
    setCurrentPage('test');
    setPopupType(null); // Reset popup
    setThongTinCCCD(null); // Reset d·ªØ li·ªáu CCCD
  };

  // X·ª≠ l√Ω g·ª≠i ƒëƒÉng k√Ω
  const guiDangKy = () => {
    alert('üéâ ƒêƒÉng k√Ω th√†nh c√¥ng! Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n trong 24h.');
    setCurrentPage('test');
  };

  // X·ª≠ l√Ω ch·ªânh s·ª≠a
  const chinhSua = () => {
    alert('Chuy·ªÉn ƒë·∫øn trang ch·ªânh s·ª≠a th√¥ng tin...');
  };

  // Render trang hi·ªán t·∫°i
  if (currentPage === 'review') {
    return (
      <ReviewConfirmPage
        userInfo={layThongTinDayDu()}
        onSubmit={guiDangKy}
        onEdit={chinhSua}
        onBack={quayLaiTest}
      />
    );
  }

  return (
    <Container className="py-4">
      <Row className="justify-content-center">
        <Col md={8}>
          <Card>
            <Card.Header>
              <h1 className="mb-0">üöó H·ªá th·ªëng Thu√™ Xe ƒêi·ªán</h1>
              <h2 className="mb-0 mt-2">Ki·ªÉm tra CCCD</h2>
            </Card.Header>
            <Card.Body>
              <Row className="g-3 mb-4">
                <Col md={4}>
                  <Button 
                    variant="success"
                    size="lg"
                    className="w-100"
                    onClick={() => testCCCD(duLieuTest[0])}
                  >
                    Test CCCD H·ª£p l·ªá
                  </Button>
                </Col>
                
                <Col md={4}>
                  <Button 
                    variant="warning"
                    size="lg"
                    className="w-100"
                    onClick={() => testCCCD(duLieuTest[1])}
                  >
                    Test CCCD ƒê√£ ƒëƒÉng k√Ω
                  </Button>
                </Col>
                
                <Col md={4}>
                  <Button 
                    variant="danger"
                    size="lg"
                    className="w-100"
                    onClick={() => testCCCD(duLieuTest[2])}
                  >
                    Test CCCD Ch∆∞a ƒë·ªß tu·ªïi
                  </Button>
                </Col>
              </Row>

              <Alert variant="info">
                <Alert.Heading>C√°ch ho·∫°t ƒë·ªông:</Alert.Heading>
                <p className="mb-1">1. Sau khi OCR/nh·∫≠p tay xong th√¥ng tin CCCD</p>
                <p className="mb-1">2. H·ªá th·ªëng ki·ªÉm tra tr√πng l·∫∑p v√† tu·ªïi</p>
                <p className="mb-0">3. Hi·ªán popup t∆∞∆°ng ·ª©ng</p>
              </Alert>
            </Card.Body>
          </Card>
        </Col>
      </Row>

      <NotificationPopup
        type={popupType as 'duplicate' | 'age' | 'confirmation' | null}
        isOpen={popupType !== null}
        onClose={dongPopup}
        onConfirm={xuLyDongY}
        onReject={xuLyKhongDongY}
        data={thongTinCCCD}
      />
    </Container>
  )
}

export default App
